{"version":3,"file":"info-manage.js","sources":["pages/me/info-manage.vue","D:/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvbWUvaW5mby1tYW5hZ2UudnVl"],"sourcesContent":["<template>\r\n  <view class=\"page\">\r\n\r\n    <!-- 表单内容 -->\r\n    <view class=\"form-container\">\r\n      <view class=\"title\">个人信息修改</view>\r\n      <view class=\"form-item\">\r\n        <view class=\"avatar-container\">\r\n          <image class=\"avatar\" :src=\"userInfo.avatar\" @click=\"changeAvatar\"></image>\r\n          <text class=\"icon\"><uni-icons type=\"camera\" size=\"24\" color=\"#666\"></uni-icons></text>\r\n        </view>\r\n      </view>\r\n\r\n      <view class=\"form-item\">\r\n        <view class=\"label\">昵称</view>\r\n        <input class=\"input\" type=\"text\" v-model=\"userInfo.nickname\" placeholder=\"请输入昵称\" />\r\n      </view>\r\n      <view class=\"form-item\">\r\n        <view class=\"label\">生日</view>\r\n        <uni-datetime-picker v-model=\"userInfo.birthday\" type=\"date\" return-type=\"string\" start=\"1900-01-01\"\r\n          end=\"2100-12-31\" />\r\n      </view>\r\n      <view class=\"form-item\">\r\n        <view class=\"label\">用户 ID</view>\r\n        <text class=\"user-id\">{{ userInfo.userID }}</text>\r\n      </view>\r\n\r\n\r\n      <view class=\"save-button\" @click=\"saveUserInfo\">保存</view>\r\n    </view>\r\n\r\n  </view>\r\n</template>\r\n\r\n<script setup>\r\n  import {\r\n    reactive,\r\n    onMounted,\r\n    toRaw\r\n  } from 'vue';\r\n  import {\r\n    onShow\r\n  } from '@dcloudio/uni-app';\r\n  // 用户信息对象\r\n  const userInfo = reactive({\r\n    avatar: '/static/dinohead.jpg',\r\n    nickname: '未登录用户',\r\n    userID: '',\r\n    birthday: ''\r\n  });\r\n\r\n  // 打开页面时读取本地存储的数据\r\n  onShow(() => {\r\n    onLoad();\r\n  });\r\n\r\n  const onLoad = () => {\r\n    const stored = uni.getStorageSync('userInfo');\r\n    if (stored) {\r\n      Object.assign(userInfo, stored); // 保持响应式\r\n    }\r\n  };\r\n\r\n  // 修改头像\r\n  const changeAvatar = () => {\r\n    uni.chooseImage({\r\n      count: 1, // 选择图片的数量\r\n      success: (res) => {\r\n        // 将选中的图片路径赋值给 avatar\r\n        userInfo.avatar = res.tempFilePaths[0];\r\n      }\r\n    });\r\n  };\r\n\r\n  // 保存用户信息到本地存储\r\n  const saveUserInfo = () => {\r\n    // 使用 toRaw 去除 Proxy，将响应式对象转换为普通对象\r\n    uni.setStorageSync('userInfo', toRaw(userInfo));\r\n    // 提示用户保存成功\r\n    uni.showToast({\r\n      title: '保存成功',\r\n      icon: 'success',\r\n      duration: 2000\r\n    });\r\n\r\n    // 模拟与后端交互\r\n    interactWithBackend();\r\n  };\r\n\r\n  // 与后端交互的示例函数\r\n  const interactWithBackend = () => {\r\n    // 假设有一个后端接口，这里使用 uni.request 模拟发送请求\r\n    uni.request({\r\n      url: 'https://api.example.com/user-info', // 替换为实际的后端接口地址\r\n      method: 'POST',\r\n      data: {\r\n        nickname: userInfo.nickname,\r\n        birthday: userInfo.birthday,\r\n        avatar: userInfo.avatar\r\n      },\r\n      success: (res) => {\r\n        console.log('后端交互成功', res.data);\r\n        // 可以在这里处理后端返回的数据，如更新用户信息\r\n      },\r\n      fail: (err) => {\r\n        console.error('后端交互失败', err);\r\n        // 可以在这里处理错误\r\n      }\r\n    });\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n  .page {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100vh;\r\n    background-color: #f4f4f4;\r\n    font-size: 32rpx;\r\n  }\r\n\r\n  .title {\r\n    font-weight: bold;\r\n    margin-bottom: 20rpx;\r\n  }\r\n\r\n  .save-button {\r\n    background-color: #007aff;\r\n    color: #ffffff;\r\n    border-radius: 8rpx;\r\n    line-height: 80rpx;\r\n    height: 80rpx;\r\n    text-align: center;\r\n  }\r\n\r\n  .form-container {\r\n    margin: 40rpx;\r\n    background-color: #ffffff;\r\n    border-radius: 16rpx;\r\n    padding: 40rpx;\r\n    box-shadow: 0 4rpx 8rpx rgba(0, 0, 0, 0.1);\r\n    height: 80vh;\r\n  }\r\n\r\n  .form-item {\r\n    align-items: center;\r\n    margin-bottom: 40rpx;\r\n  }\r\n\r\n  .label {\r\n    width: 160rpx;\r\n    font-size: 28rpx;\r\n    color: #666666;\r\n    margin: 20rpx 0;\r\n  }\r\n\r\n  .input {\r\n    width: rpx;\r\n    padding: 20rpx;\r\n    border: 2rpx solid #dddddd;\r\n    border-radius: 8rpx;\r\n  }\r\n\r\n  .avatar-container {\r\n    position: relative;\r\n    width: 160rpx;\r\n    height: 160rpx;\r\n    margin: 10px auto;\r\n  }\r\n\r\n  .avatar {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  .icon {\r\n    position: absolute;\r\n    bottom: -10rpx;\r\n    right: -20rpx;\r\n    color: #ffffff;\r\n    padding: 8rpx 16rpx;\r\n    border-radius: 8rpx;\r\n  }\r\n\r\n  .user-id {\r\n    margin-left: 20rpx;\r\n    font-size: 28rpx;\r\n    color: #999999;\r\n  }\r\n</style>","import MiniProgramPage from 'E:/program/FrontEnd/uni/uyub/pages/me/info-manage.vue'\nwx.createPage(MiniProgramPage)"],"names":["reactive","onShow","uni","toRaw"],"mappings":";;;;;;;;;;;;;;;AA4CE,UAAM,WAAWA,cAAAA,SAAS;AAAA,MACxB,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,UAAU;AAAA,IACd,CAAG;AAGDC,kBAAAA,OAAO,MAAM;AACX;IACJ,CAAG;AAED,UAAM,SAAS,MAAM;AACnB,YAAM,SAASC,cAAAA,MAAI,eAAe,UAAU;AAC5C,UAAI,QAAQ;AACV,eAAO,OAAO,UAAU,MAAM;AAAA,MAC/B;AAAA,IACL;AAGE,UAAM,eAAe,MAAM;AACzBA,oBAAAA,MAAI,YAAY;AAAA,QACd,OAAO;AAAA;AAAA,QACP,SAAS,CAAC,QAAQ;AAEhB,mBAAS,SAAS,IAAI,cAAc,CAAC;AAAA,QACtC;AAAA,MACP,CAAK;AAAA,IACL;AAGE,UAAM,eAAe,MAAM;AAEzBA,oBAAAA,MAAI,eAAe,YAAYC,cAAAA,MAAM,QAAQ,CAAC;AAE9CD,oBAAAA,MAAI,UAAU;AAAA,QACZ,OAAO;AAAA,QACP,MAAM;AAAA,QACN,UAAU;AAAA,MAChB,CAAK;AAGD;IACJ;AAGE,UAAM,sBAAsB,MAAM;AAEhCA,oBAAAA,MAAI,QAAQ;AAAA,QACV,KAAK;AAAA;AAAA,QACL,QAAQ;AAAA,QACR,MAAM;AAAA,UACJ,UAAU,SAAS;AAAA,UACnB,UAAU,SAAS;AAAA,UACnB,QAAQ,SAAS;AAAA,QAClB;AAAA,QACD,SAAS,CAAC,QAAQ;AAChBA,wBAAA,MAAA,MAAA,OAAA,mCAAY,UAAU,IAAI,IAAI;AAAA,QAE/B;AAAA,QACD,MAAM,CAAC,QAAQ;AACbA,wBAAc,MAAA,MAAA,SAAA,mCAAA,UAAU,GAAG;AAAA,QAE5B;AAAA,MACP,CAAK;AAAA,IACL;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5GA,GAAG,WAAW,eAAe;"}